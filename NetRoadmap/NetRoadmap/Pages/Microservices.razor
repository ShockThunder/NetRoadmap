@page "/microservices"
<h2>Распределенные системы и Микросервисная архитектура</h2>
<div class="table-responsive">
<table class="table table-striped table-bordered">
    <thead>
    <tr>
        <th scope="col">Уровень</th>
        <th scope="col">Темы</th>
        <th scope="col">Материалы</th>
    </tr>
    </thead>
    <tbody>
    <tr>
        <td>
            <i class="bi bi-star-fill"></i>
        </td>
        <td>Что такое распределенная система?</td>
        <td>
            <a href="https://www.intuit.ru/studies/courses/1115/177/lecture/4778">Введение в распределенные системы</a>
            <i class="bi bi-circle-fill"></i>
            <a href="https://www.youtube.com/watch?v=-W9F__D3oY4">Lecture 9 Scalability Harvard Web Development David Malan</a>
        </td>
    </tr>
    <tr>
        <td>
            <i class="bi bi-star-fill"></i><i class="bi bi-star-fill"></i>
        </td>
        <td>Вертикальное и горизонтальное масштабирование</td>
        <td>
            <a href="https://server-gu.ru/scaling-out-vs-scaling-up/">Горизонтальное и вертикальное масштабирование веб приложений</a>
            <i class="bi bi-circle-fill"></i>
            <a href="https://www.youtube.com/watch?v=-W9F__D3oY4">Lecture 9 Scalability Harvard Web Development David Malan</a>
        </td>
    </tr>
    <tr>
        <td>
            <i class="bi bi-star-fill"></i><i class="bi bi-star-fill"></i>
        </td>
        <td>Теорема CAP</td>
        <td>
            <a href="https://robertgreiner.com/cap-theorem-revisited/">CAP Theorem: Revisited</a>
            <i class="bi bi-circle-fill"></i>
            <a href="https://github.com/donnemartin/system-design-primer">The System Design Primer</a>
        </td>
    </tr>
    <tr>
        <td>
            <i class="bi bi-star-fill"></i><i class="bi bi-star-fill"></i>
        </td>
        <td>Концепция балансировки нагрузки</td>
        <td>
            <a href="https://www.youtube.com/watch?v=-W9F__D3oY4">Lecture 9 Scalability Harvard Web Development David Malan</a>
            <i class="bi bi-circle-fill"></i>
            <a href="https://github.com/donnemartin/system-design-primer#load-balancer">Load balancer</a>
        </td>
    </tr>
    <tr>
        <td>
            <i class="bi bi-star-fill"></i><i class="bi bi-star-fill"></i><i class="bi bi-star-fill"></i>
        </td>
        <td>Кеширование в распределенных системах</td>
        <td>
            <a href="https://github.com/donnemartin/system-design-primer#cache">The System Design Primer, Cache</a>
            <i class="bi bi-circle-fill"></i>
            <a href="https://www.lecloud.net/post/9246290032/scalability-for-dummies-part-3-cache">Scalability for Dummies - Part 3: Cache</a>
        </td>
    </tr>
    <tr>
        <td>
            <i class="bi bi-star-fill"></i><i class="bi bi-star-fill"></i><i class="bi bi-star-fill"></i>
        </td>
        <td>Репликации баз данных</td>
        <td>
            <a href="https://github.com/donnemartin/system-design-primer#relational-database-management-system-rdbms">The System Design Primer, Replications</a>
        </td>
    </tr>
    <tr>
        <td>
            <i class="bi bi-star-fill"></i><i class="bi bi-star-fill"></i><i class="bi bi-star-fill"></i>
        </td>
        <td>
            Выбор между Performance vs scalability, Latency vs throughput, Availability vs consistency в распределенных системах
        </td>
        <td>
            <a href="https://github.com/donnemartin/system-design-primer#performance-vs-scalability">The System Design Primer, Trade offs</a>
        </td>
    </tr>
    <tr>
        <td>
            <i class="bi bi-star-fill"></i><i class="bi bi-star-fill"></i><i class="bi bi-star-fill"></i>
        </td>
        <td>
            Consistency patterns: Weak consistency, Eventual consistency, Strong consistency
        </td>
        <td>
            <a href="https://github.com/donnemartin/system-design-primer#consistency-patterns">The System Design Primer, Consistency Patterns</a>
        </td>
    </tr>
    <tr>
        <td>
            <i class="bi bi-star-fill"></i><i class="bi bi-star-fill"></i><i class="bi bi-star-fill"></i>
        </td>
        <td>
            Availability patterns: Active-passive Failover, Active-active Failover, Master-slave replication, Master-master replication
        </td>
        <td>
            <a href="https://github.com/donnemartin/system-design-primer#availability-patterns">The System Design Primer, Availability Patterns</a>

        </td>
    </tr>

    <tr>
        <td>
            <i class="bi bi-star-fill"></i><i class="bi bi-star-fill"></i><i class="bi bi-star-fill"></i>
        </td>
        <td>
            SQL or NoSQL, NoSQL: Key-value store, Document store, Wide column store, Graph Database
        </td>
        <td>
            <a href="https://github.com/donnemartin/system-design-primer#nosql">The System Design Primer, NoSQL</a>
        </td>
    </tr>

    <tr>
        <td>
            <i class="bi bi-star-fill"></i><i class="bi bi-star-fill"></i><i class="bi bi-star-fill"></i>
        </td>
        <td>Построение микросервисной архитектуры</td>
        <td>
            <a href="https://martinfowler.com/articles/microservices.html">Статьи Мартина Фаулера по Микросервисам</a>
            <i class="bi bi-circle-fill"></i>
            <a href="https://www.amazon.com/Building-Microservices-Designing-Fine-Grained-Systems/dp/1491950358">
                Книга Building Microservices: Designing Fine-Grained Systems 1st Edition
                by Sam Newman
            </a>
        </td>
    </tr>
    <tr>
        <td>
            <i class="bi bi-star-fill"></i><i class="bi bi-star-fill"></i><i class="bi bi-star-fill"></i>
        </td>
        <td>Распределенные транзакции, 2PC, Saga Pattern</td>
        <td>
            <a href="https://developers.redhat.com/blog/2018/10/01/patterns-for-distributed-transactions-within-a-microservices-architecture/">Patterns for distributed transactions within a microservices architecture</a>
            <i class="bi bi-circle-fill"></i>
            <a href="https://microservices.io/patterns/data/saga.html">Pattern: Saga</a>
        </td>
    </tr>
    <tr>
        <td>
            <i class="bi bi-star-fill"></i><i class="bi bi-star-fill"></i><i class="bi bi-star-fill"></i>
        </td>
        <td>
            Миграция с монолита на микросервисы, Шаблон Strangler
        </td>
        <td>
            <a href="https://docs.microsoft.com/ru-ru/azure/architecture/patterns/strangler">Шаблон Strangler</a>
            <i class="bi bi-circle-fill"></i>
            <a href="https://dzone.com/articles/monolith-to-microservices-using-the-strangler-patt">Monolith to Microservices Using the Strangler Pattern</a>
        </td>
    </tr>
    </tbody>
</table>
</div>

<hr class="pt-2"/>
<h3>Контрольные вопросы:</h3>
<ul>
    <li>В чем разница между Вертикальным и горизонтальным масштабированием?</li>
    <li>В чем смысл теоремы CAP?</li>
    <li>Какие существуют алгоритмы балансировки нагрузки?</li>
    <li>Опишите шаблон кеширования Cache-aside.</li>
    <li>В чем разница между SQL и No-SQL</li>
    <li>Что такое Eventual consistency?</li>
    <li>Как добиться транзакционности в микросервисной архитектуры?</li>
    <li>Опишите идею шаблона Strangler.</li>
</ul>