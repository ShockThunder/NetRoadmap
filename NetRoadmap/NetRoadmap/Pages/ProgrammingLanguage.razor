@page "/csharp"

<h2>Язык программирования C#</h2>
<div class="table-responsive">
<table class="table table-striped table-bordered">
<thead>
<tr>
    <th scope="col">Уровень</th>
    <th scope="col">Темы</th>
    <th scope="col">Материалы</th>
</tr>
</thead>
<tbody>
<tr>
    <td>
        <i class="bi bi-star-fill"></i>
    </td>
    <td>
        Примитивные конструкции языка C#: Типы данных, Переменные, Методы, Операторы,
        Символы, Строки, Массивы, Циклы, Условия, Комментарии, Пространства имен, Перегрузка операторов
    </td>
    <td>
        <a href="https://www.oreilly.com/library/view/c-10-in/9781098121945/">Книга C# 10.0 in a Nutshell, Глава 2</a> <i class="map bi bi-circle-fill"></i>
        <a href="https://docs.microsoft.com/en-us/dotnet/csharp/tutorials/intro-to-csharp/">Introduction to C#</a> <i class="map bi bi-circle-fill"></i>
        <a href="https://docs.microsoft.com/ru-ru/dotnet/csharp/tour-of-csharp/types-and-variables">Типы и переменные</a> <i class="map bi bi-circle-fill"></i>
        <a href="https://docs.microsoft.com/ru-ru/dotnet/csharp/programming-guide/classes-and-structs/methods">Методы</a> <i class="map bi bi-circle-fill"></i>
        <a href="https://docs.microsoft.com/ru-ru/dotnet/csharp/programming-guide/strings/">Строки</a> <i class="map bi bi-circle-fill"></i>
        <a href="https://docs.microsoft.com/ru-ru/dotnet/csharp/language-reference/operators/">Операторы C#</a> <i class="map bi bi-circle-fill"></i>
        <a href="https://docs.microsoft.com/ru-ru/dotnet/csharp/tour-of-csharp/arrays">Массивы</a> <i class="map bi bi-circle-fill"></i>
        <a href="https://docs.microsoft.com/ru-ru/dotnet/csharp/language-reference/keywords/for">for</a> <i class="map bi bi-circle-fill"></i>
        <a href="https://docs.microsoft.com/ru-ru/dotnet/csharp/language-reference/keywords/namespace">namespace</a> <i class="map bi bi-circle-fill"></i>
        <a href="https://docs.microsoft.com/ru-ru/dotnet/csharp/language-reference/keywords/if-else">if-else</a>
    </td>
</tr>
<tr>
    <td>
        <i class="bi bi-star-fill"></i>
    </td>
    <td>
        Ссылочные и значимые типы данных | Stack vs Heap, Классы и структуры | Класс Object |
        Модификаторы доступа: public/private/protected/internal/protected internal | Интерфейсы и Абстрактные классы |
        Перечисления | Операторы const и readonly | Упаковка и Распаковка
    </td>
    <td>
        <a href="https://www.oreilly.com/library/view/c-10-in/9781098121945/">Книга C# 10.0 in a Nutshell, Глава 2-3</a> <i class="map bi bi-circle-fill"></i>
        <a href="https://habr.com/ru/sandbox/68552/">Ссылочные и значимые типы данных в CLR via C#</a> <i class="map bi bi-circle-fill"></i>
        <a href="https://tproger.ru/translations/programming-concepts-stack-and-heap/">Stack vs Heap</a> <i class="map bi bi-circle-fill"></i>
        <a href="https://docs.microsoft.com/ru-ru/dotnet/api/system.object?view=netframework-4.8">Object Класс</a> <i class="map bi bi-circle-fill"></i>
        <a href="https://metanit.com/sharp/patterns/1.3.php">Интерфейсы или абстрактные классы</a> <i class="map bi bi-circle-fill"></i>
        <a href="https://www.bestprog.net/ru/2017/12/27/enumerations_ru/">Перечисления</a> <i class="map bi bi-circle-fill"></i>
        <a href="https://docs.microsoft.com/ru-ru/dotnet/csharp/language-reference/keywords/accessibility-levels">Модификаторы доступа</a> <i class="map bi bi-circle-fill"></i>
        <a href="https://metanit.com/sharp/tutorial/3.12.php">Обобщения</a>
    </td>
</tr>
<tr>
    <td>
        <i class="bi bi-star-fill"></i>
    </td>
    <td>
        Обобщения для классов, методов, интерфейсов, структур и делегатов | Ограничения
    </td>
    <td>
        <a href="https://www.oreilly.com/library/view/c-10-in/9781098121945/">Книга C# 10.0 in a Nutshell, Глава 2-3</a> <i class="map bi bi-circle-fill"></i>
        <a href="https://metanit.com/sharp/tutorial/3.12.php">Обобщения</a>
    </td>
</tr>
<tr>
    <td>
        <i class="bi bi-star-fill"></i>
    </td>
    <td>
        Статические классы/свойства/конструкторы | Правила вызовов статических конструкторов
    </td>
    <td>
        <a href="https://www.oreilly.com/library/view/c-10-in/9781098121945/">Книга C# 10.0 in a Nutshell, Глава 3</a>
        <i class="map bi bi-circle-fill"></i>
        <a href="https://docs.microsoft.com/ru-ru/dotnet/csharp/programming-guide/classes-and-structs/static-constructors">Статические конструкторы</a>
        <i class="map bi bi-circle-fill"></i>
        <a href="https://metanit.com/sharp/tutorial/3.6.php">Статические члены и модификатор static</a>
    </td>
</tr>
<tr>
    <td>
        <i class="bi bi-star-fill"></i>
    </td>
    <td>
        Наследование в С# | Правила вызова конструкторов в иерархиях наследования | Операторы is и as | constructor chaining |
        Использование ключевых слов virtual, override, new
    </td>
    <td>
        <a href="https://docs.microsoft.com/ru-ru/dotnet/csharp/tutorials/inheritance">Наследование в C# и .NET</a>
        <i class="map bi bi-circle-fill"></i>
        <a href="https://www.oreilly.com/library/view/c-10-in/9781098121945/">C# 7.0 in a Nutshell</a>
        <i class="map bi bi-circle-fill"></i>
        <a href="https://docs.microsoft.com/ru-ru/dotnet/csharp/language-reference/operators/type-testing-and-cast">Операторы приведения и тестирования типов</a>
        <i class="map bi bi-circle-fill"></i>
        <a href="https://www.codecompiled.com/csharp/constructor-chaining-c/">Constructor chaining in C#</a>
    </td>
</tr>
<tr>
    <td>
        <i class="bi bi-star-fill"></i>
    </td>
    <td>
        Делегаты и События, Func vs Action | Лямбда Выражения/Анонимные методы | Обработка исключений try/catch/finally/throw,
        Фильтры исключений | Nullable типы | Методы расширения | Tuples
    </td>
    <td>
        <a href="https://www.oreilly.com/library/view/c-10-in/9781098121945/">Книга C# 10.0 in a Nutshell, Глава 4</a> <i class="map bi bi-circle-fill"></i>
        <a href="https://habr.com/ru/post/329886/">Делегаты и Лямбда выражения в C# .Net — Шпаргалка или коротко о главном</a> <i class="map bi bi-circle-fill"></i>
        <a href="https://docs.microsoft.com/ru-ru/dotnet/standard/exceptions/best-practices-for-exceptions">Лучшие методики обработки исключений</a> <i class="map bi bi-circle-fill"></i>
        <a href="http://sergeyteplyakov.blogspot.com/2014/12/exception-filters-in-c-60.html">Фильтры исключений в C# 6.0</a> <i class="map bi bi-circle-fill"></i>
        <a href="https://docs.microsoft.com/ru-ru/dotnet/csharp/programming-guide/classes-and-structs/extension-methods">Методы расширения</a> <i class="map bi bi-circle-fill"></i>
        <a href="https://stackoverflow.com/questions/4317479/func-vs-action-vs-predicate">Func vs. Action vs. Predicate</a>
    </td>
</tr>
<tr>
    <td>
        <i class="bi bi-star-fill"></i>
    </td>
    <td>
        Классы string и StringBuilder, Неизменяемость строк, Интернирование строк, ASCII и Unicode
    </td>
    <td>
        <a href="https://www.oreilly.com/library/view/c-10-in/9781098121945/">Книга C# 10.0 in a Nutshell, Глава 6</a>
        <i class="map bi bi-circle-fill"></i>
        <a href="https://www.geeksforgeeks.org/c-sharp-string-vs-stringbuilder/">String vs StringBuilder</a>
        <i class="map bi bi-circle-fill"></i>
        <a href="https://habr.com/ru/post/172627/">
            Особенности строк в .NET
        </a>

    </td>
</tr>
<tr>
    <td>
        <i class="bi bi-star-fill"></i>
    </td>
    <td>
        Структуры DateTime/TimeSpan/DateTimeOffset | Класс Random |
        Структура Guid | Интерфейсы IComparable, IEquatable, IComparer
    </td>
    <td>
        <a href="https://www.oreilly.com/library/view/c-10-in/9781098121945/">Книга C# 10.0 in a Nutshell, Глава 6</a> <i class="map bi bi-circle-fill"></i>
        <a href="https://www.geeksforgeeks.org/c-sharp-string-vs-stringbuilder/">String vs StringBuilder</a> <i class="map bi bi-circle-fill"></i>
        <a href="https://docs.microsoft.com/ru-ru/dotnet/standard/datetime/choosing-between-datetime">Выбор между типами DateTime, DateTimeOffset, TimeSpan и TimeZoneInfo</a> <i class="map bi bi-circle-fill"></i>
        <a href="https://habr.com/ru/post/198694/">Делегаты и события в .NET</a> <i class="map bi bi-circle-fill"></i>
        <a href="https://docs.microsoft.com/ru-ru/dotnet/csharp/programming-guide/statements-expressions-operators/lambda-expressions">Лямбда-выражения</a>
    </td>
</tr>

<tr>
    <td>
        <i class="bi bi-star-fill"></i>
    </td>
    <td>
        Коллекции ArrayList, List, Dictionary, Hashtable, HashSet, LinkedList, Stack, Queue, Класс Array |
        Интерфейсы IEnumerable и IEnumerator, Утиная типизация (duck typing), Цикл foreach |
        Интерфейсы ICollection, IList, IReadOnlyList
    </td>
    <td>
        <a href="https://www.oreilly.com/library/view/c-10-in/9781098121945/">Книга C# 10.0 in a Nutshell, Глава 7</a> <i class="map bi bi-circle-fill"></i>
        <a href="https://docs.microsoft.com/ru-ru/dotnet/standard/collections/">Коллекции и структуры данных</a> <i class="map bi bi-circle-fill"></i>
        <a href="https://docs.microsoft.com/ru-ru/dotnet/csharp/programming-guide/concepts/iterators">Итераторы</a>
    </td>
</tr>

<tr>
    <td>
        <i class="bi bi-star-fill"></i>
    </td>
    <td>
        Механизм работы Сборщика Мусора, Финализаторы, Интерфейс IDisposablе, using
    </td>
    <td>
        <a href="https://www.oreilly.com/library/view/c-10-in/9781098121945/">Книга C# 10.0 in a Nutshell, Глава 12</a>
    </td>
</tr>
<tr>
    <td>
        <i class="bi bi-star-fill"></i>
    </td>
    <td>
        Работа с потоками ввода/вывода, Пространство имен System.IO, Классы File, Directory, FileInfo, DirectoryInfo, Path, FileStream,
        MemoryStream, StreamReader, StreamWriter, BinaryReader, BinaryWriter...
    </td>
    <td>
        <a href="https://www.oreilly.com/library/view/c-10-in/9781098121945/">Книга C# 10.0 in a Nutshell, Глава 15</a>
    </td>
</tr>
<tr>
    <td>
        <i class="bi bi-star-fill"></i>
    </td>
    <td>
        Механизм сериализации, Бинарная сериализация, XML сериализация,
        Атрибуты [DataContract], [DataMember], [OnSerializing], [Serializable], [OnSerialized],
        [OnDeserializing], [OnDeserialized]
    </td>
    <td>
        <a href="https://www.oreilly.com/library/view/c-10-in/9781098121945/">Книга C# 10.0 in a Nutshell, Глава 17</a>
    </td>
</tr>
<tr>
    <td>
        <i class="bi bi-star-fill"></i><i class="bi bi-star-fill"></i>
    </td>
    <td>
        Pattern Matching
    </td>
    <td>
        <a href="https://habr.com/ru/company/microsoft/blog/423229/">Pattern matching в C# 7</a>
    </td>
</tr>

<tr>
    <td>
        <i class="bi bi-star-fill"></i><i class="bi bi-star-fill"></i>
    </td>
    <td>
        Шаблон Dispose, Слабые Материалы (Weak References), Утечки памяти в управляемом коде и способы их предотвращения
    </td>
    <td>
        <a href="https://www.oreilly.com/library/view/c-10-in/9781098121945/">Книга C# 10.0 in a Nutshell, Главы 8-9</a> <i class="map bi bi-circle-fill"></i>
        <a href="https://www.red-gate.com/products/dotnet-development/ants-memory-profiler/learning-memory-management/">Learning .NET memory management</a>
    </td>
</tr>

<tr>
    <td>
        <i class="bi bi-star-fill"></i><i class="bi bi-star-fill"></i>
    </td>
    <td> Работа с классом Regex, Написание регулярных выражений</td>
    <td>
        <a href="https://www.oreilly.com/library/view/c-10-in/9781098121945/">C# 7.0 in a Nutshell</a> <i class="map bi bi-circle-fill"></i>
        <a href="https://habr.com/ru/company/otus/blog/469989/">C# Regex в примерах</a>
    </td>
</tr>
<tr>
    <td>
        <i class="bi bi-star-fill"></i><i class="bi bi-star-fill"></i>
    </td>
    <td>
        Диагностика: Stopwatch, Классы Debug и Trace, Классы StackTrace и StackFrame, Использование CPU и Memory профайлеров
    </td>
    <td>
        <a href="https://www.oreilly.com/library/view/c-10-in/9781098121945/">Книга C# 10.0 in a Nutshell, Глава 13</a>
    </td>
</tr>
<tr>
    <td>
        <i class="bi bi-star-fill"></i><i class="bi bi-star-fill"></i><i class="bi bi-star-fill"></i>
    </td>
    <td>Работа со структурами Memory&lt;T&gt; и Span&lt;T&gt; </td>
    <td>
        <a href="https://docs.microsoft.com/ru-ru/dotnet/standard/memory-and-spans/memory-t-usage-guidelines">
            Рекомендации по использованию структур Memory&lt;T&gt; и Span&lt;T&gt;
        </a>
    </td>
</tr>
<tr>
    <td>
        <i class="bi bi-star-fill"></i><i class="bi bi-star-fill"></i><i class="bi bi-star-fill"></i>
    </td>
    <td>Работа со структурой Деревьями выражений (Expression Trees) </td>
    <td>
        <a href="https://www.oreilly.com/library/view/c-10-in/9781098121945/">Книга C# 10.0 in a Nutshell, Глава 8</a>
    </td>
</tr>
<tr>
    <td>
        <i class="bi bi-star-fill"></i><i class="bi bi-star-fill"></i><i class="bi bi-star-fill"></i>
    </td>
    <td>
        Рефлексия, Метаданные, Атрибуты, Позднее связывание, Класс Activator, Класс Type<br>
        Ключевое слово dynamic, Классы ExpandoObject и DynamicObject
    </td>
    <td>
        <a href="https://www.oreilly.com/library/view/c-10-in/9781098121945/">Книга C# 10.0 in a Nutshell, Главы 19-20</a>
    </td>
</tr>
</tbody>
</table>
</div>
<hr class="pt-2"/>
<h3>Контрольные вопросы:</h3>
<ul>
    <li>В чем разница между ссылочными и значимыми типами данных?</li>
    <li>В чем разница между делегатами и событиями?</li>
    <li>В чем разница между операторами const и readonly?</li>
    <li>Может ли структура реализовывать интерфейс</li>
    <li>Что такое Duck typing? В чем отличия интерфейсов IEnumerable и IEnumerator?</li>
    <li>В чем заключается необходимость неизменяемости строк? (или какие преимущества неизменяемых типов над изменяемыми?)</li>
    <li>Почему StringBuilder значительно опережает string по производительности при большом количестве конкатенаций?</li>
    <li>Когда вызывается статический конструктор экземплярного класса?</li>
    <li>В чем разница между коллекциями: Dictionary vs Hashtable, Hashtable vs HashSet, Dictionary vs Lookup?</li>
    <li>Для чего механизм сборки мусора использует поколения?</li>
    <li>Существует ли связь между механизмом рефлексии и метаданными сборки?</li>
    <li>Как реализовать механизм Замыкания (Clojure) в C#?</li>
</ul>