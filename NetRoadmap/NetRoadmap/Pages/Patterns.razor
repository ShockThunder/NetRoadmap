@page "/patterns"
<h2>Шаблоны и принципы проектирования, SOLID</h2>
<div class="table-responsive">
<table class="table table-striped table-bordered">
    <thead>
    <tr>
        <th scope="col">Уровень</th>
        <th scope="col">Темы</th>
        <th scope="col">Материалы</th>
    </tr>
    </thead>
    <tbody>
    <tr>
        <td>
            <i class="bi bi-star-fill"></i>
        </td>
        <td>Принципы SOLID</td>
        <td>
            <a href="https://oz.by/books/more10428344.html">Книга Паттерны проектирования на платформе .NET, Главы 17-22</a> <i class="bi bi-star-fill"></i>
            <a href="https://medium.com/webbdev/solid-4ffc018077da">Принципы SOLID, о которых должен знать каждый разработчик</a>
        </td>
    </tr>
    <tr>
        <td>
            <i class="bi bi-star-fill"></i>
        </td>
        <td>Принципы DRY, KISS, YAGNI</td>
        <td>
            <a href="https://habr.com/ru/company/skillbox/blog/454314/">10 принципов объектно-ориентированного программирования, о которых должен знать каждый разработчик</a>
            <i class="bi bi-star-fill"></i>
            <a href="https://johnnyblog.ru/archives/166">Принципы DRY, KISS, YAGNI </a>
        </td>
    </tr>
    <tr>
        <td>
            <i class="bi bi-star-fill"></i>
        </td>
        <td>Принцип Inversion of Control (IoC)</td>
        <td>
            <a href="http://demiazz.github.io/about-ioc/">Inversion Of Control</a>
            <i class="bi bi-star-fill"></i>
            <a href="https://habr.com/ru/post/131993/">IoC, DI, IoC-контейнер — Просто о простом</a>
        </td>
    </tr>
    <tr>
        <td>
            <i class="bi bi-star-fill"></i>
        </td>
        <td>Ключевые GoF шаблоны: Синглтон, Фабрики, Фасад, Стратегия, Декоратор, Адаптер, Наблюдатель, Состояние</td>
        <td>
            <a href="https://oz.by/books/more10428344.html">Книга Паттерны проектирования на платформе .NET, Главы 1-16</a> <i class="bi bi-star-fill"></i>
            <a href="https://habr.com/ru/company/mailru/blog/325492/">Шаблоны проектирования с человеческим лицом</a>
        </td>
    </tr>
    <tr>
        <td>
            <i class="bi bi-star-fill"></i><i class="bi bi-star-fill"></i>
        </td>
        <td>Другие GoF шаблоны: Строитель, Прототип, Приспособленец, Компоновщик, Прокси, Цепочка обязанностей, Медиатор, Интерпретатор, Посетитель, Шаблонный метод</td>
        <td>
            <a href="https://oz.by/books/more10428344.html">Книга Паттерны проектирования на платформе .NET, Главы 1-16</a> <i class="bi bi-star-fill"></i>
            <a href="https://habr.com/ru/company/mailru/blog/325492/">Шаблоны проектирования с человеческим лицом</a>
        </td>
    </tr>
    <tr>
        <td>
            <i class="bi bi-star-fill"></i><i class="bi bi-star-fill"></i>
        </td>
        <td>Не GoF шаблоны: Null-Object, Rules, Event Aggregator, Lazy Load pattern, Шаблоны внедрения зависимостей: внедрений через конструктор/свойство/метод,</td>
        <td>
            <a href="https://habr.com/ru/post/352530/">Паттерны внедрения зависимостей. Часть 1</a> <i class="bi bi-star-fill"></i>
            <a href="https://habr.com/ru/post/352574/">Паттерны внедрения зависимостей. Часть 2</a> <i class="bi bi-star-fill"></i>
            <a href="https://refactoring.guru/ru/introduce-null-object">Введение Null-объекта</a> <i class="bi bi-star-fill"></i>
            <a href="https://martinfowler.com/eaaDev/EventAggregator.html">Event Aggregator</a> <i class="bi bi-star-fill"></i>
            <a href="https://amarfut.net/2018/11/02/design-patterns-rules/">Шаблоны проектирования: Rules</a>
        </td>
    </tr>
    <tr>
        <td>
            <i class="bi bi-star-fill"></i><i class="bi bi-star-fill"></i>
        </td>
        <td>Закон Деметры</td>
        <td>
            <a href="https://habr.com/ru/post/319652/">Закон Деметры</a>
        </td>
    </tr>
    </tbody>
</table>
</div>


<hr class="pt-2"/>
<h3>Контрольные вопросы:</h3>
<ul>
    <li>Как расшифровывается аббревиатура SOLID?</li>
    <li>В чем идея принципа замещения Лисков?</li>
    <li>Какие шаблоны проектирования помогают придерживаться принципа Открыт/Закрыт?</li>
    <li>Какие шаблоны проектирования помогают придерживаться принципа Единой ответственности?</li>
    <li>В чем сходства и отличия принципов Единой ответственности и Разделения интерфейсов?</li>
    <li>Опишите принципы DRY, KISS, YAGNI.</li>
    <li>В чем разница между шаблонами Фасад и Адаптер?</li>
    <li>Как реализовать Синглтон? Можно ли реализовать Синглтон с помощью DI-контейнеров?</li>
    <li>В чем смысл шаблона Декоратор?</li>
    <li>В чем разница между шаблонами Стратегия и Шаблонный метод?</li>
    <li>В чем суть принципа Inversion of Control (IoC)?</li>
    <li>Какую проблему решает шаблон проектирования Посетитель?</li>
    <li>Опишите реализацию шаблона Медиатор.</li>
    <li>Когда нужно использовать шаблон проектирования Rules?</li>
</ul>